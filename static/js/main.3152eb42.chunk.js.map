{"version":3,"sources":["icons/github.tsx","icons/smiley-dead.tsx","icons/smiley-laugh.tsx","icons/smiley-sunglasses.tsx","mine-sweeper.tsx","mine-sweeper-container.tsx","registerServiceWorker.ts","index.tsx","icons/bug.tsx"],"names":["Github","props","width","height","viewBox","d","SmileyDead","SmileyLaugh","SmileySunGlasses","GameStatus","numberColors","0","1","2","3","4","5","6","7","8","Difficulty","MineSweeper","timerId","getRandomNumber","num","Math","floor","random","toMineField","x","y","isMine","isFlagged","isRevealed","mineCounter","position","state","mineField","revealCell","field","reduce","acc","val","concat","filter","m","length","clearTimer","setState","gameStatus","VICTORY","revealSurroundingCells","score","PAUSED","rows","columns","mines","generateMineField","document","addEventListener","e","onKeyDown","removeEventListener","prevProps","this","GAME_OVER","revealAllMines","grid","map","row","i","cells","_","j","mine","flagged","revealed","revealedMine","key","className","onClick","onCellClick","onContextMenu","onCellRightClick","onDoubleClick","onCellDoubleClick","flagCounter","counter","counterText","toDisplayNumber","timerText","resetGame","title","RUNNING","displayNumber","String","keyCode","window","clearInterval","numberOfMines","rowIdx","colIdx","Array","fill","setMineCounters","placeMinesOnField","createEmptyMineField","setInterval","updateTimer","bind","gameOver","preventDefault","toggleFlagged","perimeterReveal","forEach","cellPositions","getPositionsOfSurroundingCells","fieldMineCounter","posX","posY","countSurroundingMines","constructSurroundingCells","pos","getSurroundingCells","React","MineSweeperContainer","getDifficultySettings","EASY","difficulty","setDifficulty","MEDIUM","HARD","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","href","getElementById","oncontextmenu","URL","process","toString","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3152eb42.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport default function Github({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0 1 12 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function SmileyDead({ ...props }: {}) {\r\n  return (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm4 17h-8v-2h8v2zm-.499-6.296l-1.298 1.296-1.203-1.204 1.298-1.296-1.298-1.296 1.203-1.204 1.298 1.296 1.296-1.296 1.203 1.204-1.297 1.296 1.297 1.296-1.202 1.204-1.297-1.296zm-7 0l-1.298 1.296-1.203-1.204 1.298-1.296-1.298-1.296 1.203-1.204 1.298 1.296 1.296-1.296 1.203 1.204-1.297 1.296 1.297 1.296-1.202 1.204-1.297-1.296z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function SmileyLaugh({ ...props }: {}) {\r\n  return (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 2c5.514 0 10 4.486 10 10s-4.486 10-10 10-10-4.486-10-10 4.486-10 10-10zm0-2c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm5.507 13.941c-1.512 1.195-3.174 1.931-5.506 1.931-2.334 0-3.996-.736-5.508-1.931l-.493.493c1.127 1.72 3.2 3.566 6.001 3.566 2.8 0 4.872-1.846 5.999-3.566l-.493-.493zm-9.007-5.941c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5zm7 0c-.828 0-1.5.671-1.5 1.5s.672 1.5 1.5 1.5 1.5-.671 1.5-1.5-.672-1.5-1.5-1.5z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function SmileySunGlasses({ ...props }: {}) {\r\n  return (\r\n    <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M12 0c-6.627 0-12 5.373-12 12s5.373 12 12 12 12-5.373 12-12-5.373-12-12-12zm0 2c3.691 0 6.915 2.016 8.647 5h-17.294c1.732-2.984 4.956-5 8.647-5zm0 20c-5.514 0-10-4.486-10-10 0-1.045.163-2.052.461-3h1.859c.606 1.518 1.929 3 3.986 3 2.477 0 2.153-2.31 3.694-2.31s1.218 2.31 3.695 2.31c2.055 0 3.379-1.482 3.984-3h1.86c.298.948.461 1.955.461 3 0 5.514-4.486 10-10 10zm5.508-8.059l.492.493c-1.127 1.72-3.199 3.566-5.999 3.566-2.801 0-4.874-1.846-6.001-3.566l.492-.493c1.513 1.195 3.174 1.931 5.509 1.931 2.333 0 3.994-.736 5.507-1.931z\" />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\nimport SmileyDead from './icons/smiley-dead';\nimport SmileyLaugh from './icons/smiley-laugh';\nimport SmileySunGlasses from './icons/smiley-sunglasses';\n\nconst numberColors = {\n  0: '',\n  1: 'one',\n  2: 'two',\n  3: 'three',\n  4: 'four',\n  5: 'five',\n  6: 'six',\n  7: 'seven',\n  8: 'eight',\n};\n\nenum GameStatus {\n  RUNNING,\n  PAUSED,\n  GAME_OVER,\n  VICTORY,\n}\n\ninterface IPosition {\n  x: number;\n  y: number;\n}\n\ninterface IMineSweeperStateProps {\n  gameStatus: GameStatus;\n  score: number;\n  rows: number;\n  columns: number;\n  mines: number;\n  mineField: IMineField[][];\n}\n\ninterface IMineField {\n  isMine: boolean;\n  isRevealed: boolean;\n  isFlagged: boolean;\n  mineCounter: number | null; // If its a mine the counter will be null\n  position: IPosition;\n}\n\ninterface IMineSweeperProps {\n  rows: number;\n  columns: number;\n  mines: number;\n}\n\nexport default class MineSweeper extends React.Component<IMineSweeperProps, IMineSweeperStateProps> {\n  private timerId: number;\n\n  constructor(props: IMineSweeperProps) {\n    super(props);\n    this.state = {\n      score: 0,\n      gameStatus: GameStatus.PAUSED,\n      rows: this.props.rows,\n      columns: this.props.columns,\n      mines: this.props.mines,\n      mineField: this.generateMineField(this.props.rows, this.props.columns, this.props.mines),\n    };\n  }\n\n  public componentDidMount() {\n    document.addEventListener('keydown', (e) => this.onKeyDown(e));\n  }\n\n  public componentWillUnmount() {\n    document.removeEventListener('keydown', (e) => this.onKeyDown(e));\n  }\n\n  public componentDidUpdate(prevProps: IMineSweeperProps) {\n    const { rows, columns, mines } = this.props;\n    if (rows !== prevProps.rows || columns !== prevProps.columns || mines !== prevProps.mines) {\n      this.clearTimer();\n      this.setState({\n        ...this.state,\n        rows,\n        columns,\n        mines,\n        score: 0,\n        gameStatus: GameStatus.PAUSED,\n        mineField: this.generateMineField(rows, columns, mines),\n      });\n    }\n  }\n\n  public gameOver() {\n    this.clearTimer();\n    // TODO: Use this.state.score as Highscore\n    this.setState({ gameStatus: GameStatus.GAME_OVER });\n    this.revealAllMines();\n  }\n\n  public render() {\n    const grid = this.state.mineField.map((row: IMineField[], i) => {\n      const cells = row.map((_, j) => {\n        const mine = this.state.mineField[i][j];\n        const isRevealed = mine.isRevealed;\n        const isFlagged = mine.isFlagged;\n        const isRevealedMine = mine.isRevealed && mine.isMine;\n        const flagged = isFlagged ? ' flagged' : '';\n        const revealed = isRevealed ? ' revealed' : '';\n        const revealedMine = isRevealedMine ? ' mine' : '';\n        const num = isRevealed && mine.mineCounter ? numberColors[mine.mineCounter] : '';\n        const mineCounter = mine.mineCounter && mine.isRevealed && mine.mineCounter > 0 ? mine.mineCounter : '';\n        return (\n          <div\n            key={`cell-${i}-${j}`}\n            className={`grid-cell${revealed}${revealedMine}${flagged} ${num}`}\n            onClick={() => this.onCellClick(i, j)}\n            onContextMenu={(e) => this.onCellRightClick(e, i, j)}\n            onDoubleClick={(e) => this.onCellDoubleClick(e, i, j)}\n          >\n            {mineCounter}\n          </div>\n        );\n      });\n      return (\n        <div key={`row-${i}`} className=\"grid-row\">\n          {cells}\n        </div>\n      );\n    });\n\n    const flagCounter = this.state.mineField\n      .reduce((acc: IMineField[], val: IMineField[]) => acc.concat(val), [])\n      .filter((m: IMineField) => m.isFlagged && !m.isRevealed).length;\n    const counter = this.props.mines - flagCounter;\n    const counterText = this.toDisplayNumber(counter);\n    const timerText = this.toDisplayNumber(this.state.score);\n\n    return (\n      <div className=\"game-wrapper\">\n        <div className=\"mine-sweeper\">\n          <div className=\"game-state\">\n            <div className=\"counter\">\n              <span>{counterText}</span>\n            </div>\n            <div className=\"game-status\" onClick={() => this.resetGame()} title=\"Reset the game\">\n              {this.state.gameStatus === GameStatus.PAUSED && <SmileyLaugh />}\n              {this.state.gameStatus === GameStatus.RUNNING && <SmileyLaugh />}\n              {this.state.gameStatus === GameStatus.GAME_OVER && <SmileyDead />}\n              {this.state.gameStatus === GameStatus.VICTORY && <SmileySunGlasses />}\n            </div>\n            <div className=\"timer\">\n              <span>{timerText}</span>\n            </div>\n          </div>\n          <div className=\"grid\">{grid}</div>\n        </div>\n      </div>\n    );\n  }\n\n  private toDisplayNumber(num: number) {\n    if (num > 999) {\n      return '999';\n    }\n    let displayNumber = '';\n    if (num < 100) {\n      displayNumber += '0';\n    }\n    if (num < 10) {\n      displayNumber += '0';\n    }\n    return displayNumber.concat(String(num));\n  }\n\n  private onKeyDown(e: KeyboardEvent) {\n    if (this.state.gameStatus !== GameStatus.PAUSED && e.keyCode === 82) {\n      this.resetGame();\n    }\n  }\n\n  private clearTimer() {\n    window.clearInterval(this.timerId);\n  }\n\n  private resetGame() {\n    this.clearTimer();\n    this.setState({\n      score: 0,\n      gameStatus: GameStatus.PAUSED,\n      mineField: this.generateMineField(this.props.rows, this.props.columns, this.props.mines),\n    });\n  }\n\n  private placeMinesOnField(mineField: IMineField[][], rows: number, columns: number, numberOfMines: number) {\n    while (numberOfMines > 0) {\n      const rowIdx = this.getRandomNumber(rows);\n      const colIdx = this.getRandomNumber(columns);\n      if (!mineField[rowIdx][colIdx].isMine) {\n        mineField[rowIdx][colIdx].isMine = true;\n        numberOfMines--;\n      }\n    }\n    return mineField;\n  }\n\n  private getRandomNumber = (num: number): number => Math.floor(Math.random() * num);\n\n  private toMineField = (x: number, y: number): IMineField => ({\n    isMine: false,\n    isFlagged: false,\n    isRevealed: false,\n    mineCounter: null, // If its a mine the counter will remain null\n    position: { x, y },\n  });\n\n  private createEmptyMineField(rows: number, columns: number): IMineField[][] {\n    return Array(rows)\n      .fill(0)\n      .map((_, x) =>\n        Array(columns)\n          .fill(0)\n          .map((m, y) => this.toMineField(x, y))\n      );\n  }\n\n  private generateMineField(rows: number, columns: number, mines: number) {\n    return this.setMineCounters(this.placeMinesOnField(this.createEmptyMineField(rows, columns), rows, columns, mines));\n  }\n\n  private updateTimer() {\n    const score = this.state.score + 1;\n    this.setState({\n      score,\n    });\n  }\n\n  private onCellClick(x: number, y: number) {\n    if (\n      this.state.gameStatus === GameStatus.VICTORY ||\n      this.state.gameStatus === GameStatus.GAME_OVER ||\n      this.isFlagged(x, y)\n    ) {\n      return;\n    }\n    if (this.state.gameStatus !== GameStatus.RUNNING) {\n      this.setState({\n        gameStatus: GameStatus.RUNNING,\n      });\n      this.timerId = window.setInterval(this.updateTimer.bind(this), 1000);\n    }\n    this.isMine(x, y) ? this.gameOver() : this.revealCell(x, y);\n  }\n\n  private onCellRightClick(e: React.MouseEvent, x: number, y: number) {\n    e.preventDefault();\n    if (this.state.gameStatus === GameStatus.VICTORY || this.state.gameStatus === GameStatus.GAME_OVER) {\n      return;\n    }\n    this.toggleFlagged(x, y);\n  }\n\n  private onCellDoubleClick(e: React.MouseEvent, x: number, y: number) {\n    e.preventDefault();\n    if (this.state.gameStatus === GameStatus.VICTORY || this.state.gameStatus === GameStatus.GAME_OVER) {\n      return;\n    }\n    const mine = this.state.mineField[x][y];\n    if (mine.isRevealed) {\n      this.perimeterReveal(x, y);\n    }\n  }\n\n  private isMine = (x: number, y: number): boolean => this.state.mineField[x][y].isMine;\n\n  private isFlagged = (x: number, y: number): boolean => this.state.mineField[x][y].isFlagged;\n\n  private revealAllMines() {\n    const mineField = this.state.mineField;\n    mineField.map((row) =>\n      row.forEach((field) => {\n        if (field.isMine) {\n          field.isRevealed = true;\n          field.isFlagged = false;\n        }\n      })\n    );\n    this.setState({\n      mineField,\n    });\n  }\n\n  private toggleFlagged(x: number, y: number) {\n    const mineField = this.state.mineField;\n    if (!mineField[x][y].isRevealed) {\n      mineField[x][y].isFlagged = !mineField[x][y].isFlagged;\n      this.setState({\n        mineField,\n      });\n    }\n  }\n\n  private revealCell = (x: number, y: number) => {\n    const field = this.state.mineField[x][y];\n    field.isRevealed = true;\n    field.isFlagged = false;\n    const winningCondition =\n      this.state.mineField\n        .reduce((acc: IMineField[], val: IMineField[]) => acc.concat(val), [])\n        .filter((m: IMineField) => !m.isMine && !m.isRevealed).length === 0;\n\n    if (winningCondition) {\n      this.clearTimer();\n      this.setState({\n        gameStatus: GameStatus.VICTORY,\n      });\n    } else {\n      this.setState(\n        {\n          mineField: this.state.mineField,\n        },\n        () => this.revealSurroundingCells(x, y)\n      );\n    }\n  };\n\n  private perimeterReveal(x: number, y: number) {\n    const cellPositions = this.getPositionsOfSurroundingCells(x, y);\n    const fieldMineCounter = this.state.mineField[x][y].mineCounter;\n    const numberOfFlags = cellPositions\n      .map(([posX, posY]) => this.state.mineField[posX][posY])\n      .filter((mine) => !mine.isRevealed && mine.isFlagged).length;\n    if (numberOfFlags !== fieldMineCounter) {\n      return;\n    }\n    const surroundingMines = cellPositions\n      .map(([posX, posY]) => this.state.mineField[posX][posY])\n      .filter((mine) => !mine.isRevealed && !mine.isFlagged);\n\n    surroundingMines.forEach((mine: IMineField) => {\n      mine.isMine ? this.gameOver() : this.revealCell(mine.position.x, mine.position.y);\n    });\n  }\n\n  private revealSurroundingCells(x: number, y: number) {\n    if (this.state.mineField[x][y].mineCounter !== 0) {\n      return;\n    }\n    const cellPositions = this.getPositionsOfSurroundingCells(x, y);\n    const surroundingMines = cellPositions\n      .map(([posX, posY]) => this.state.mineField[posX][posY])\n      .filter((mine: IMineField) => !mine.isRevealed);\n    surroundingMines.forEach((mine: IMineField) => {\n      this.revealCell(mine.position.x, mine.position.y);\n    });\n  }\n\n  private getSurroundingCells(x: number, y: number): Array<[number, number]> {\n    return [\n      [x - 1, y - 1],\n      [x, y - 1],\n      [x + 1, y - 1],\n      [x - 1, y],\n      [x + 1, y],\n      [x - 1, y + 1],\n      [x, y + 1],\n      [x + 1, y + 1],\n    ];\n  }\n\n  private setMineCounters(mineField: IMineField[][]): IMineField[][] {\n    return mineField.map((row, x) =>\n      row.map((field, y) => {\n        return field.isMine\n          ? field\n          : {\n              ...field,\n              mineCounter: this.countSurroundingMines(x, y, mineField),\n            };\n      })\n    );\n  }\n\n  private countSurroundingMines(x: number, y: number, mineField: IMineField[][]): number {\n    let counter = 0;\n    const surroundingCells = this.constructSurroundingCells(x, y);\n    surroundingCells.forEach((pos: number[]) => {\n      if (mineField[pos[0]][pos[1]].isMine) {\n        counter++;\n      }\n    });\n    return counter;\n  }\n\n  private constructSurroundingCells(x: number, y: number) {\n    return this.getSurroundingCells(x, y).reduce(\n      (acc: Array<[number, number]>, val) =>\n        val[0] < 0\n          ? acc\n          : val[1] < 0\n          ? acc\n          : val[0] >= this.props.rows\n          ? acc\n          : val[1] >= this.props.columns\n          ? acc\n          : [...acc, val],\n      []\n    );\n  }\n\n  private getPositionsOfSurroundingCells(x: number, y: number) {\n    return this.constructSurroundingCells(x, y);\n  }\n}\n","import * as React from 'react';\r\n\r\nimport MineSweeper from './mine-sweeper';\r\n\r\ninterface IMineSweeperContainerStateProps {\r\n  rows: number;\r\n  columns: number;\r\n  mines: number;\r\n  difficulty: Difficulty;\r\n}\r\n\r\nenum Difficulty {\r\n  EASY,\r\n  MEDIUM,\r\n  HARD,\r\n}\r\n\r\nexport default class MineSweeperContainer extends React.Component<{}, IMineSweeperContainerStateProps> {\r\n  constructor(props = {}) {\r\n    super(props);\r\n    const { rows, columns, mines } = this.getDifficultySettings(Difficulty.EASY);\r\n    this.state = {\r\n      difficulty: Difficulty.EASY,\r\n      rows,\r\n      columns,\r\n      mines,\r\n    };\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"header\">\r\n          <h1>Minesweeper</h1>\r\n          <div className=\"instructions\">\r\n            <span>\r\n              To flag cells use <span className=\"hotkey\">right click</span>.\r\n            </span>\r\n            <span>\r\n              To perimeter check already revealed cells use <span className=\"hotkey\">double click</span>.\r\n            </span>\r\n            <span>\r\n              To reset the game press the <span className=\"hotkey\">R</span> key or the{' '}\r\n              <span className=\"hotkey\">smiley</span> button.\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"difficulty\">\r\n          <h3>Difficulty</h3>\r\n          <div className=\"difficulty-container\">\r\n            <span\r\n              className={this.state.difficulty === Difficulty.EASY ? 'active' : ''}\r\n              onClick={() => this.setDifficulty(Difficulty.EASY)}\r\n            >\r\n              Easy\r\n              <div className=\"difficulty-mine-container\">\r\n                <i className=\"difficulty-mine\" />\r\n              </div>\r\n            </span>\r\n            <span\r\n              className={this.state.difficulty === Difficulty.MEDIUM ? 'active' : ''}\r\n              onClick={() => this.setDifficulty(Difficulty.MEDIUM)}\r\n            >\r\n              Medium\r\n              <div className=\"difficulty-mine-container\">\r\n                <i className=\"difficulty-mine\" />\r\n                <i className=\"difficulty-mine\" />\r\n              </div>\r\n            </span>\r\n            <span\r\n              className={this.state.difficulty === Difficulty.HARD ? 'active' : ''}\r\n              onClick={() => this.setDifficulty(Difficulty.HARD)}\r\n            >\r\n              Hard\r\n              <div className=\"difficulty-mine-container\">\r\n                <i className=\"difficulty-mine\" />\r\n                <i className=\"difficulty-mine\" />\r\n                <i className=\"difficulty-mine\" />\r\n              </div>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <MineSweeper rows={this.state.rows} columns={this.state.columns} mines={this.state.mines} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  private getDifficultySettings(difficulty: Difficulty): { rows: number; columns: number; mines: number } {\r\n    return {\r\n      0: { rows: 8, columns: 8, mines: 10 },\r\n      1: { rows: 16, columns: 16, mines: 40 },\r\n      2: { rows: 16, columns: 30, mines: 99 },\r\n    }[difficulty];\r\n  }\r\n\r\n  private setDifficulty(difficulty: Difficulty) {\r\n    const { rows, columns, mines } = this.getDifficultySettings(difficulty);\r\n\r\n    this.setState({\r\n      difficulty,\r\n      rows,\r\n      columns,\r\n      mines,\r\n    });\r\n  }\r\n}\r\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL!, window.location.toString());\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type')!.indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import './index.css';\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport Bug from './icons/bug';\nimport Github from './icons/github';\nimport MineSweeperContainer from './mine-sweeper-container';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <a href=\"https://github.com/Knochenmark/minesweeper/issues\" title=\"Report a bug\" className=\"bug\">\n      <Bug />\n    </a>\n    <div className=\"github-container\">\n      <a href=\"https://github.com/Knochenmark\" title=\"Find me on Github\" className=\"github\">\n        <Github />\n        Knochenmark\n      </a>\n      <a href=\"https://github.com/Psyperl\" title=\"Find me on Github\" className=\"github\">\n        <Github />\n        Psyperl\n      </a>\n    </div>\n    <MineSweeperContainer />\n  </React.Fragment>,\n  document.getElementById('root') as HTMLElement\n);\n\ndocument.oncontextmenu = () => false;\nregisterServiceWorker();\n","import * as React from 'react';\r\n\r\nexport default function Bug({ ...props }: {}) {\r\n  return (\r\n    <svg width={24} height={24} viewBox=\"0 0 24 24\" {...props}>\r\n      <path d=\"M7.074 1.408A1.42 1.42 0 0 1 8.505 0c.942 0 1.626.883 1.38 1.776-.093.336-.042.695.138.995.401.664 1.084 1.073 1.977 1.078.88-.004 1.572-.408 1.977-1.078.181-.299.231-.658.138-.995C13.869.884 14.551 0 15.495 0c.79 0 1.431.63 1.431 1.408 0 .675-.482 1.234-1.118 1.375a1.2 1.2 0 0 0-.769.548c-.613 1.017.193 1.917.93 2.823C14.759 6.716 13.445 7 12 7c-1.468 0-2.771-.277-3.975-.84.748-.92 1.555-1.803.935-2.83a1.195 1.195 0 0 0-.768-.548 1.414 1.414 0 0 1-1.118-1.374zM12 11c-1.724 0-3.355-.296-4.872-.882C5.805 13.05 5.849 21.091 12 21.984c6.085-.886 6.232-8.764 4.859-11.871A13.39 13.39 0 0 1 12 11zm6.319-2.314c.14.319.394.454.648.454.39 0 2.462-1.016 2.958-1.016.42 0 .817.249.98.657a1.034 1.034 0 0 1-.594 1.346l-2.231.866c-.479.186-.857.655-.765 1.333.09.659.652 1.052 1.227 1.052h2.402c.583 0 1.054.464 1.054 1.037s-.472 1.037-1.054 1.037h-2.387c-.558 0-1.147.332-1.277 1.136-.104.645.269 1.162.763 1.383l2.42 1.078c.53.236.766.851.526 1.373a1.062 1.062 0 0 1-1.395.518l-2.561-1.14c-.341-.152-.706-.062-.963.364A8.137 8.137 0 0 1 12 24a8.137 8.137 0 0 1-6.135-3.943c-.2-.342-.564-.409-.901-.259l-2.561 1.14a1.061 1.061 0 0 1-1.395-.518 1.031 1.031 0 0 1 .526-1.373l2.42-1.078c.523-.233.863-.734.751-1.462-.106-.685-.692-1.057-1.265-1.057H1.054C.472 15.452 0 14.988 0 14.415s.472-1.037 1.054-1.037h2.402c.552 0 1.129-.353 1.235-1.111.082-.58-.277-1.082-.773-1.274l-2.231-.866a1.033 1.033 0 0 1-.594-1.346c.212-.53.823-.796 1.367-.584.232.09 2.332.944 2.573.944.242 0 .501-.125.663-.491.18-.408.384-.787.601-1.146C8.005 8.502 9.887 9 12 9c2.08 0 3.986-.51 5.699-1.502.225.372.435.765.62 1.188z\" />\r\n    </svg>\r\n  );\r\n}\r\n"],"sourceRoot":""}